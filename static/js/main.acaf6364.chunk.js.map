{"version":3,"sources":["Matrix.js","GlobalAlign.js","FittingAlign.js","LocalAlign.js","Home.js","serviceWorker.js","index.js"],"names":["Matrix","props","renderRow","row","char","Grid","Row","Column","map","val","index","state","matrix","this","shortS","longS","Container","columns","length","celled","split","React","Component","UP","LEFT","TOPLEFT","ORIGIN","Home","handleClick","algorithm","s1","document","getElementById","value","s2","match","parseInt","mismatch","gap","M","v","w","pointers","i","push","j","temp","max_val","Number","NEGATIVE_INFINITY","dir","globalAlign","fittingAlign","localAlign","setState","showMatrix","S1","S2","handleChange","checked","onChange","type","name","id","defaultChecked","for","class","Button","onClick","Boolean","window","location","hostname","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.acaf6364.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Grid, Image, Button, Container, Card } from 'semantic-ui-react';\r\n\r\nclass Matrix extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            matrix: [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\r\n        }\r\n    }\r\n    renderRow = (row, char) => {\r\n      return (\r\n        <Grid.Row>\r\n        <Grid.Column>\r\n          <p> {char} </p>\r\n        </Grid.Column>\r\n        {row.map((val, index) => {\r\n            return (\r\n              <Grid.Column>\r\n                <p> {val} </p>\r\n              </Grid.Column>\r\n            )\r\n          })\r\n        }\r\n        </Grid.Row>\r\n      );\r\n    }\r\n    render() {\r\n        const { matrix, shortS, longS } = this.props;\r\n        return (\r\n          <Container>\r\n            <Grid columns={matrix[0].length + 1} celled>\r\n              {this.renderRow(longS.split(''), ' ')}\r\n              {matrix.map((row, index) => {\r\n                  return (\r\n                    this.renderRow(row, shortS[index])\r\n                  )\r\n              })}\r\n            </Grid>\r\n          </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Matrix;\r\n","const UP = (-1,0)\r\nconst LEFT = (0, -1)\r\nconst TOPLEFT = (-1, -1)\r\nconst ORIGIN = (0, 0)\r\n\r\nexport function globalAlign(v, w, match, mismatch, gap) {\r\n  //Initialize variables\r\n  var M = []\r\n  var pointers = []\r\n  for (var i = 0; i < v.length; i++) {\r\n    M.push([])\r\n    pointers.push([])\r\n    for (var j = 0; j < w.length; j++) {\r\n      M[i].push(0);\r\n      pointers[i].push(ORIGIN);\r\n    }\r\n  }\r\n\r\n  //Construct Matrix M\r\n  for (var i = 0; i < v.length; i++) {\r\n    for (var j = 0; j < w.length; j++) {\r\n      var max_val = Number.NEGATIVE_INFINITY;\r\n      var dir = ORIGIN;\r\n      if (i == 0 && j == 0) {\r\n        max_val = 0;\r\n        dir = ORIGIN;\r\n      }\r\n\r\n      if (i > 0 && j > 0 && v[i] === w[j]) {\r\n        var temp = M[i - 1][j - 1] + match;\r\n        if (temp > max_val) {\r\n          max_val = temp;\r\n          dir = TOPLEFT;\r\n        }\r\n      }\r\n\r\n      if (i > 0 && j > 0 && v[i] != w[j]) {\r\n        var temp = M[i - 1][j - 1] + mismatch;\r\n        if (temp > max_val) {\r\n          max_val = temp;\r\n          dir = TOPLEFT;\r\n        }\r\n      }\r\n\r\n      if (j > 0) {\r\n        var temp = M[i][j - 1] + gap\r\n        if (temp > max_val) {\r\n          max_val = temp;\r\n          dir = LEFT;\r\n        }\r\n      }\r\n\r\n      if (i > 0) {\r\n        var temp = M[i - 1][j] + gap\r\n        if (temp > max_val) {\r\n          max_val = temp;\r\n          dir = UP;\r\n        }\r\n      }\r\n      M[i][j] = max_val;\r\n      pointers[i][j] = dir;\r\n    }\r\n  }\r\n\r\n  return { M, pointers }\r\n}\r\n","const UP = (-1,0)\r\nconst LEFT = (0, -1)\r\nconst TOPLEFT = (-1, -1)\r\nconst ORIGIN = (0, 0)\r\n\r\nexport function fittingAlign(v, w, match, mismatch, gap) {\r\n  //Initialize variables\r\n  var M = []\r\n  var pointers = []\r\n  for (var i = 0; i < v.length; i++) {\r\n    M.push([])\r\n    pointers.push([])\r\n    for (var j = 0; j < w.length; j++) {\r\n      M[i].push(0);\r\n      pointers[i].push(ORIGIN);\r\n    }\r\n  }\r\n\r\n  //Construct Matrix M\r\n  for (var i = 0; i < v.length; i++) {\r\n    for (var j = 0; j < w.length; j++) {\r\n      var max_val = Number.NEGATIVE_INFINITY;\r\n      var dir = ORIGIN;\r\n      if (i == 0) {\r\n        max_val = 0;\r\n        dir = ORIGIN;\r\n      }\r\n\r\n      if (i > 0 && j > 0 && v[i] === w[j]) {\r\n        var temp = M[i - 1][j - 1] + match;\r\n        if (temp > max_val) {\r\n          max_val = temp;\r\n          dir = TOPLEFT;\r\n        }\r\n      }\r\n\r\n      if (i > 0 && j > 0 && v[i] != w[j]) {\r\n        var temp = M[i - 1][j - 1] + mismatch;\r\n        if (temp > max_val) {\r\n          max_val = temp;\r\n          dir = TOPLEFT;\r\n        }\r\n      }\r\n\r\n      if (j > 0) {\r\n        var temp = M[i][j - 1] + gap\r\n        if (temp > max_val) {\r\n          max_val = temp;\r\n          dir = LEFT;\r\n        }\r\n      }\r\n\r\n      if (i > 0) {\r\n        var temp = M[i - 1][j] + gap\r\n        if (temp > max_val) {\r\n          max_val = temp;\r\n          dir = UP;\r\n        }\r\n      }\r\n      M[i][j] = max_val;\r\n      pointers[i][j] = dir;\r\n    }\r\n  }\r\n\r\n  return { M, pointers }\r\n}\r\n","const UP = (-1,0)\r\nconst LEFT = (0, -1)\r\nconst TOPLEFT = (-1, -1)\r\nconst ORIGIN = (0, 0)\r\n\r\nexport function localAlign(v, w, match, mismatch, gap) {\r\n  //Initialize variables\r\n  var M = []\r\n  var pointers = []\r\n  for (var i = 0; i < v.length; i++) {\r\n    M.push([])\r\n    pointers.push([])\r\n    for (var j = 0; j < w.length; j++) {\r\n      M[i].push(0);\r\n      pointers[i].push(ORIGIN);\r\n    }\r\n  }\r\n\r\n  //Construct Matrix M\r\n  for (var i = 0; i < v.length; i++) {\r\n    for (var j = 0; j < w.length; j++) {\r\n      var max_val = 0;\r\n      var dir = ORIGIN;\r\n\r\n      if (i > 0 && j > 0 && v[i] === w[j]) {\r\n        var temp = M[i - 1][j - 1] + match;\r\n        if (temp > max_val) {\r\n          max_val = temp;\r\n          dir = TOPLEFT;\r\n        }\r\n      }\r\n\r\n      if (i > 0 && j > 0 && v[i] != w[j]) {\r\n        var temp = M[i - 1][j - 1] + mismatch;\r\n        if (temp > max_val) {\r\n          max_val = temp;\r\n          dir = TOPLEFT;\r\n        }\r\n      }\r\n\r\n      if (j > 0) {\r\n        var temp = M[i][j - 1] + gap\r\n        if (temp > max_val) {\r\n          max_val = temp;\r\n          dir = LEFT;\r\n        }\r\n      }\r\n\r\n      if (i > 0) {\r\n        var temp = M[i - 1][j] + gap\r\n        if (temp > max_val) {\r\n          max_val = temp;\r\n          dir = UP;\r\n        }\r\n      }\r\n      M[i][j] = max_val;\r\n      pointers[i][j] = dir;\r\n    }\r\n  }\r\n\r\n  return { M, pointers }\r\n}\r\n","import React from 'react';\r\nimport Matrix from './Matrix';\r\nimport { Button } from 'semantic-ui-react';\r\nimport { globalAlign } from './GlobalAlign.js';\r\nimport { fittingAlign } from './FittingAlign.js';\r\nimport { localAlign } from './LocalAlign.js';\r\nclass Home extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          matrix: [[]],\r\n          S1: '',\r\n          S2: '',\r\n          match: 0,\r\n          mismatch: 0,\r\n          gap: 0,\r\n          showMatrix: false,\r\n          algorithm: 'global'\r\n        }\r\n    }\r\n\r\n    handleClick = () => {\r\n      const { algorithm } = this.state;\r\n      var s1 = '-' + document.getElementById('input_s1').value;\r\n      var s2 = '-' + document.getElementById('input_s2').value;\r\n      var match = parseInt(document.getElementById('input_match').value);\r\n      var mismatch = parseInt(document.getElementById('input_mismatch').value);\r\n      var gap = parseInt(document.getElementById('input_gap').value);\r\n      var result;\r\n      if (algorithm === 'global') {\r\n        result = globalAlign(s1, s2, match, mismatch, gap);\r\n      }\r\n      else if (algorithm === 'fitting') {\r\n        result = fittingAlign(s1, s2, match, mismatch, gap);\r\n      }\r\n      else {\r\n        result = localAlign(s1, s2, match, mismatch, gap);\r\n      }\r\n      const { M } = result;\r\n      this.setState({matrix: M, showMatrix: true, S1: s1, S2: s2})\r\n    }\r\n\r\n    handleChange = () => {\r\n      if (document.getElementById('btn_fitting').checked) {\r\n          this.setState({algorithm: 'fitting'});\r\n      }\r\n      else if (document.getElementById('btn_local').checked) {\r\n          this.setState({algorithm: 'local'});\r\n      }\r\n      else {\r\n        this.setState({algorithm: 'global'});\r\n      }\r\n    }\r\n\r\n    render() {\r\n        const { matrix, S1, S2, showMatrix } = this.state;\r\n        return (\r\n          <div>\r\n            <h1> Sequence Aligner </h1>\r\n            <form>\r\n              <fieldset>\r\n                <legend>Select Alignment Algorithm</legend>\r\n                <p>\r\n                  <input onChange={this.handleChange} type=\"radio\" name=\"algorithm\" id=\"btn_global\" value=\"global\" defaultChecked/>\r\n                  <label for=\"btn_global\" class=\"algorithm_select\">Global</label>\r\n                </p>\r\n                <p>\r\n                  <input onChange={this.handleChange} type=\"radio\" name=\"algorithm\" id=\"btn_fitting\" value=\"fitting\"/>\r\n                  <label for=\"btn_fitting\" class=\"algorithm_select\">Fitting</label>\r\n                </p>\r\n                <p>\r\n                  <input onChange={this.handleChange} type=\"radio\" name=\"algorithm\" id=\"btn_local\" value=\"local\"/>\r\n                  <label for=\"btn_local\">Local</label>\r\n                </p>\r\n              </fieldset>\r\n              <fieldset>\r\n                <legend>Enter Sequences</legend>\r\n                <p>\r\n                  <label for=\"input_s1\">Sequence 1</label>\r\n                  <input type=\"text\" id=\"input_s1\"/>\r\n                </p>\r\n                <p>\r\n                  <label for=\"input_s2\">Sequence 2</label>\r\n                  <input type=\"text\" id=\"input_s2\"/>\r\n                </p>\r\n              </fieldset>\r\n              <fieldset>\r\n                <legend>Enter Scoring Function</legend>\r\n                  <label for=\"input_match\">Match</label>\r\n                  <input class=\"score_input\" type=\"number\" id=\"input_match\"/>\r\n                  <label for=\"input_mismatch\">Mismatch</label>\r\n                  <input class=\"score_input\" type=\"number\" id=\"input_mismatch\"/>\r\n                  <label for=\"input_gap\">Gap</label>\r\n                  <input class=\"score_input\" type=\"number\" id=\"input_gap\"/>\r\n              </fieldset>\r\n            </form>\r\n            <div class=\"display\">\r\n              <Button id=\"btn_compute\" onClick={this.handleClick}>Compute Alignment</Button>\r\n              { showMatrix &&\r\n                <Matrix matrix={matrix} longS={S1.length >= S2.length ? S1 : S2} shortS={S1.length < S2.length ? S1 : S2}/>\r\n              }\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from './Home';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Home />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}